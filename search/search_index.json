{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Workshop 02 - Data Quality","text":"<p>Para desenvolver o desafio de neg\u00f3cio, vamos montar a seguinte ETL</p>"},{"location":"#fluxo","title":"Fluxo","text":"<pre><code>graph TD;\nA(Configura Vari\u00e1veis) --&gt; B(Ler o Banco SQL)\nB(Ler o Banco SQL) --&gt; C(Valida\u00e7\u00e3o do Schema de Entrada)\nC(Valida\u00e7\u00e3o do Schema de Entrada) --&gt; |Sucesso| D(Transformar os KPIs)\nC(Valida\u00e7\u00e3o do Schema de Entrada) --&gt; |Falha| E(Alerta de Erro)\nD(Transformar os KPIs) --&gt; F(Valida\u00e7\u00e3o do Schema de Sa\u00edda)\nF(Valida\u00e7\u00e3o do Schema de Sa\u00edda) --&gt; |Sucesso| G(Salvar no DuckDB)\nF(Valida\u00e7\u00e3o do Schema de Sa\u00edda) --&gt; |Falha| H(Alerta de Erro)\n</code></pre>"},{"location":"#contrato-de-dados","title":"Contrato de dados","text":"<p>             Bases: <code>SchemaModel</code></p> <p>Define o esquema para a valida\u00e7\u00e3o de dados de produtos com Pandera.</p> <p>Este esquema inclui campos b\u00e1sicos para produtos, incluindo um campo de e-mail validado por uma express\u00e3o regular.</p> <p>Attributes:</p> Name Type Description <code>id_produto</code> <code>Series[int]</code> <p>Identificador do produto, deve estar entre 1 e 20.</p> <code>nome</code> <code>Series[str]</code> <p>Nome do produto.</p> <code>quantidade</code> <code>Series[int]</code> <p>Quantidade dispon\u00edvel do produto, deve estar entre 20 e 200.</p> <code>preco</code> <code>Series[float]</code> <p>Pre\u00e7o do produto, deve estar entre 5.0 e 120.0.</p> <code>categoria</code> <code>Series[str]</code> <p>Categoria do produto.</p> <code>email</code> <code>Series[str]</code> <p>E-mail associado ao produto, deve seguir o formato padr\u00e3o de e-mails.</p> Source code in <code>app\\schema.py</code> <pre><code>class ProdutoSchema(pa.SchemaModel):\n    \"\"\"\n    Define o esquema para a valida\u00e7\u00e3o de dados de produtos com Pandera.\n\n    Este esquema inclui campos b\u00e1sicos para produtos, incluindo um campo de e-mail\n    validado por uma express\u00e3o regular.\n\n    Attributes:\n        id_produto (Series[int]): Identificador do produto, deve estar entre 1 e 20.\n        nome (Series[str]): Nome do produto.\n        quantidade (Series[int]): Quantidade dispon\u00edvel do produto, deve estar entre 20 e 200.\n        preco (Series[float]): Pre\u00e7o do produto, deve estar entre 5.0 e 120.0.\n        categoria (Series[str]): Categoria do produto.\n        email (Series[str]): E-mail associado ao produto, deve seguir o formato padr\u00e3o de e-mails.\n    \"\"\"\n\n    id_produto: Series[int]\n    nome: Series[str]\n    quantidade: Series[int] = pa.Field(ge=20, le=200)\n    preco: Series[float] = pa.Field(ge=05.0, le=120.0)\n    categoria: Series[str]\n\n    class Config:\n        coerce = True\n        strict = True\n</code></pre>"}]}